import telebot
from telebot import types
from telegram.constants import ParseMode
from configparser import ConfigParser
import random

# Read config.ini
cfg = ConfigParser()
cfg.read('config.ini')
token = cfg['default']['BOT_TOKEN']

# Setup token
bot = telebot.TeleBot(token)

markup = types.InlineKeyboardMarkup()
markup.add(types.InlineKeyboardButton('–ù–∞—à—ñ –ø—Ä–∞–≤–∏–ª–∞ü´∂', url='https://t.me/c/1307921278/115'))

# Jokes

@bot.message_handler(commands=['count'])
def send_count(message):
    bot.send_message(message.chat.id, f'–ù–∞—Ä–∞—Ö—É–≤–∞–ª–∞ —Å—Ç—ñ–ª—å–∫–∏ –∫–≤—ñ—Ç–æ—á–æ–∫: {bot.get_chat_members_count(message.chat.id)}')

@bot.message_handler(commands=['start'])
def send_start(message):
    bot.send_message(message.chat.id, "–°—É–º—É–≤–∞–ª–∏? –ê —è –≤–∂–µ —Ç—É—Ç–æ–Ω—å–∫–∏!")

@bot.message_handler(commands=['stop'])
def send_stop(message):
    bot.send_message(message.chat.id, "–ü—ñ—à–ª–∞ —Ñ–∞—Ä–±—É–≤–∞—Ç–∏—Å—å, –Ω–µ–∑–∞–±–∞—Ä–æ–º –ø–æ–≤–µ—Ä–Ω—É—Å—å!")

# Greet function
def greet_user(messages):
    for message in messages:
        for new_member in message.new_chat_members:
            bot.send_message(message.chat.id, f' [{new_member.first_name}](tg://user?id={message.from_user.id}), –ø—Ä–∏–≤—ñ—Ç üòç\n–°–∫—ñ–ª—å–∫–∏ —Ä–æ–∫—ñ–≤? –ß–∏–º –∑–∞–π–º–∞—î—à—Å—è? –í—á–∏—à—Å—è —á–∏ –ø—Ä–∞—Ü—é—î—à?\n–©–æ —Ö–æ—á–µ—à –ø—Ä–æ —Å–µ–±–µ —Ä–æ–∑–ø–æ–≤—ñ—Å—Ç–∏?üôÑ', parse_mode="Markdown", reply_markup = markup)
bot.set_update_listener(greet_user)

# Games
choices = ['–∫–∞–º—ñ–Ω—å', '–ø–∞–ø—ñ—Ä', '–Ω–æ–∂–∏—Ü—ñ']

@bot.message_handler(commands=['play'])
def handle_play(message):
    user_choice = message.text.split(' ', 1)[-1].strip().lower()

    if user_choice in choices:
        bot_choice = random.choice(choices)
        result = determine_winner(user_choice, bot_choice)
        response = f"–¢–≤—ñ–π –≤–∏–±—ñ—Ä {user_choice}.\n–Ø –æ–±—Ä–∞–ª–∞ {bot_choice}.\n{result}"
    else:
        response = "–ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä! –ù–∞–ø–∏—à–∏ –∫–∞–º—ñ–Ω—å, –ø–∞–ø—ñ—Ä –∞–±–æ –Ω–æ–∂–∏—Ü—ñ."

    bot.send_message(message.chat.id, response)

# Determine the winner of the game
def determine_winner(user_choice, bot_choice):
    if user_choice == bot_choice:
        return "–ù—ñ—á–∏—è!"
    elif (user_choice == '–∫–∞–º—ñ–Ω—å' and bot_choice == '–Ω–æ–∂–∏—Ü—ñ') or \
         (user_choice == '–ø–∞–ø—ñ—Ä' and bot_choice == '–∫–∞–º—ñ–Ω—å') or \
         (user_choice == '–Ω–æ–∂–∏—Ü—ñ' and bot_choice == '–ø–∞–ø—ñ—Ä'):
        return "–¢–≤–æ—è –≤–∑—è–ª–∞! –ì—Ä–∞—Ü!"
    else:
        return "–•–∞! –ê —è –ø–µ—Ä–µ–º–æ–∂–µ—Ü—å!"

# Run in main
if __name__ == '__main__':
	bot.infinity_polling()

